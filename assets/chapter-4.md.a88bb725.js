import{_ as e,c as a,o as t,a as s}from"./app.5da7f276.js";const f=JSON.parse('{"title":"Chapitre 4 - Les interactions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Les boutons","slug":"les-boutons"},{"level":2,"title":"La recherche","slug":"la-recherche"}],"relativePath":"chapter-4.md"}'),r={name:"chapter-4.md"},l=s(`<h1 id="chapitre-4-les-interactions" tabindex="-1">Chapitre 4 - Les interactions <a class="header-anchor" href="#chapitre-4-les-interactions" aria-hidden="true">#</a></h1><p>\u{1F3AF} L&#39;objectif ici est de commencer \xE0 interagir avec la page.</p><h2 id="les-boutons" tabindex="-1">Les boutons <a class="header-anchor" href="#les-boutons" aria-hidden="true">#</a></h2><p>Nous allons cliquer sur le bouton <code>Getting started</code> et v\xE9rifier que la navigation fonctionne correctement.</p><ul><li>Cr\xE9ez un nouveau fichier de test <code>src/chapter_4.spec.ts</code> et ajouter un nouveau test.</li><li>Naviguez vers <code>https://playwright.dev/</code></li><li>Attendez que le r\xE9seau ait termin\xE9 de charger gr\xE2ce \xE0 <code>page.waitForLoadState</code>.</li></ul><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>\u2139\uFE0F Playwright a un syst\xE8me d&#39;attente assez d\xE9velopp\xE9 pour la <a href="https://playwright.dev/docs/actionability" target="_blank" rel="noreferrer">disponibilit\xE9 d&#39;un \xE9lement</a> mais il dispose \xE9galement d&#39;API pour attendre certains \xE9tats :</p><ul><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-function" target="_blank" rel="noreferrer"><code>waitForFunction</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-load-state" target="_blank" rel="noreferrer"><code>waitForLoadState</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-navigation" target="_blank" rel="noreferrer"><code>waitForNavigation</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-request" target="_blank" rel="noreferrer"><code>waitForRequest</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-response" target="_blank" rel="noreferrer"><code>waitForResponse</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-selector" target="_blank" rel="noreferrer"><code>waitForSelector</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-timeout" target="_blank" rel="noreferrer"><code>waitForTimeout</code></a></li><li><a href="https://playwright.dev/docs/api/class-page#page-wait-for-url" target="_blank" rel="noreferrer"><code>waitForURL</code></a></li></ul></div><ul><li>Cliquez sur le bouton contenant le texte <code>Getting started</code> et attendre qu&#39;une navigation ait eu lieu, en m\xEAme temps avec <code>Promise.all</code>.</li></ul><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>\u2139\uFE0F Playwright dispose de <a href="https://playwright.dev/docs/selectors" target="_blank" rel="noreferrer">s\xE9lecteurs tr\xE8s puissants</a></p></div><ul><li>V\xE9rifiez avec <code>expect</code> que l&#39;URL de la page soit \xE9gale \xE0 <code>https://playwright.dev/docs/intro</code>.</li></ul><h2 id="la-recherche" tabindex="-1">La recherche <a class="header-anchor" href="#la-recherche" aria-hidden="true">#</a></h2><p>Nous allons maintenant v\xE9rifier que la recherche fonctionne correctement.</p><ul><li>Ajouter un nouveau test</li><li>Naviguez vers <code>https://playwright.dev/</code></li><li>Depuis la page getting started, cliquez sur la barre de recherche</li><li>Saisissez le texte <code>selectors</code> dans le champ de recherche avec le placeholder <code>Search docs</code>. De la popup qui vient de s&#39;afficher.</li></ul><div class="tip custom-block"><p class="custom-block-title">INFO</p><p>\u2139\uFE0F Playwright propose deux fa\xE7ons de remplir un champ soit en utilisant l&#39;event input avec la m\xE9thode <a href="https://playwright.dev/docs/api/class-page#page-fill" target="_blank" rel="noreferrer">fill</a> ou encore en simulant la saisie utilisateur avec la m\xE9thode <a href="https://playwright.dev/docs/api/class-page#page-type" target="_blank" rel="noreferrer">type</a></p></div><ul><li>Attendez que la response d&#39;Algolia, qui devrait r\xE9pondre \xE0 la requ\xEAte suivante <code>https://&lt;some-dsn&gt;.algolia.net/1/indexes/*/queries?&lt;some-query-params&gt;</code></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Si les expressions r\xE9guli\xE8res ne sont pas votre force \u{1F609}, les requ\xEAtes Algolia peuvent \xEAtre identifi\xE9es par</p><div class="language-js"><button class="copy"></button><span class="lang">js</span><pre><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> alogoliaRequestRegex </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">https:</span><span style="color:#A6ACCD;">\\/\\/</span><span style="color:#C3E88D;">.</span><span style="color:#89DDFF;">*</span><span style="color:#C3E88D;">.algolia.net</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">1</span><span style="color:#A6ACCD;">\\/</span><span style="color:#C3E88D;">indexes</span><span style="color:#A6ACCD;">\\/\\*\\/</span><span style="color:#C3E88D;">queries</span><span style="color:#A6ACCD;">\\?</span><span style="color:#89DDFF;">/</span></span>
<span class="line"></span></code></pre></div></div><ul><li>Appuyez sur la touche <a href="https://playwright.dev/docs/api/class-page#page-press" target="_blank" rel="noreferrer">entrer</a>.</li><li>Attendez qu&#39;une navigation ait lieu.</li><li>V\xE9rifiez avec <code>expect</code> que l&#39;URL de la page soit \xE9gale \xE0 <code>https://playwright.dev/docs/selectors</code>.</li></ul>`,16),o=[l];function i(c,n,p,d,u,h){return t(),a("div",null,o)}var v=e(r,[["render",i]]);export{f as __pageData,v as default};
